/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : Haru
 #	author : miyako
 #	2017/06/24
 #
 # --------------------------------------------------------------------------------*/



// --- Extended Graphics State
void PDF_ExtGState_SetAlphaFill(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_ExtGState_SetAlphaStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_ExtGState_SetBlendMode(sLONG_PTR *pResult, PackagePtr pParams);

// --- Document
void PDF_UseCNTEncodings(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LoadU3DFromFile(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_GetPageByIndex(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetCurrentEncoder(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_CreateExtGState(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LoadRaw1BitImageFromMem(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_AddPageLabel(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LoadTTFontFromFile(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_UseCNSEncodings(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_GetTTFontDefFromFile(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LoadType1FontFromFile(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_ResetError(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LoadRawImageFromFile(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LoadPngImageFromFile(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_UseKREncodings(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_CreateOutline(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_InsertPage(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_AddPage(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_GetCurrentPage(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetOpenAction(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_GetPageMode(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetPageMode(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_GetPageLayout(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetPageLayout(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetPagesConfiguration(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SaveToFile(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_HasDoc(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_GetFont(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_FreeDocAll(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_FreeDoc(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_NewDoc(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Free(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_New(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_GetEncoder(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_GetCurrentEncoder(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LoadRawImageFromMem(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LoadPngImageFromMem(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LoadJpegImageFromMem(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LoadJpegImageFromFile(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetInfoAttr(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_GetInfoAttr(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetInfoDateAttr(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetPassword(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetPermission(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetEncryptionMode(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetCompressionMode(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_UseJPEncodings(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_GetViewerPreference(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SetViewerPreference(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_UseCNTFonts(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_SaveToStream(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_UseCNSFonts(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_UseKRFonts(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_UseJPFonts(sLONG_PTR *pResult, PackagePtr pParams);

// --- Annotation
void PDF_MarkupAnnot_SetPopup(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetIntent(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetAlpha(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetDate(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetSubject(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetTitle(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Annot_SetNoColor(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Annot_SetGrayColor(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Annot_SetCMYKColor(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Annot_SetRGBColor(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Annotation_SetBorderStyle(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_TextAnnot_SetOpened(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_TextAnnot_SetIcon(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LinkAnnot_SetBorderStyle(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LinkAnnot_SetHighlightMode(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetRectDiff(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetCloudEffect(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetRGBColor(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetCMYKColor(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetGrayColor(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetNoColor(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LineAnnot_SetLeader(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LineAnnot_SetCaption(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_LineAnnot_SetPosition(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_PopupAnnot_SetOpened(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_MarkupAnnot_SetQuadPoints(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_FreeAnnot_SetEndingStyle(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_FreeAnnot_Set3PointCallout(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_FreeAnnot_Set2PointCallout(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_FreeAnnot_SetDefaultStyle(sLONG_PTR *pResult, PackagePtr pParams);

// --- Outline
void PDF_Outline_SetDestination(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Outline_SetOpened(sLONG_PTR *pResult, PackagePtr pParams);

// --- Destination
void PDF_Destination_SetFitBV(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Destination_SetFitBH(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Destination_SetFitB(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Destination_SetFitR(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Destination_SetFitV(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Destination_SetFitH(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Destination_SetFit(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Destination_SetXYZ(sLONG_PTR *pResult, PackagePtr pParams);

// --- Global
void PDF_Global_GetEncoding(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Global_SetEncoding(sLONG_PTR *pResult, PackagePtr pParams);

// --- Page
void PDF_Page_SetGrayFill(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetFontAndSize(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetExtGState(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetDash(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetCMYKStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetCMYKFill(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetCharSpace(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_Rectangle(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_MoveToNextLine(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_MoveTo(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_MoveTextPos(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_LineTo(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GSave(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GRestore(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_FillStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_Fill(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_EofillStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_Eofill(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_Eoclip(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_EndText(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_EndPath(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_Ellipse(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_DrawImage(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CurveTo3(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CurveTo2(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CurveTo(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_Concat(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_ClosePathFillStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_ClosePathEofillStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_ClosePathStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_ClosePath(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_Clip(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_Circle(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_BeginText(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_Arc(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateCircleAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateSquareAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateProjectionAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateStampAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreatePopupAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateFreeTextAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateStrikeOutAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateSquigglyAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateUnderlineAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateHighlightAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateLineAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateTextMarkupAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_TextRect(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_TextOut(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_Stroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_ShowTextNextLineEx(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_ShowTextNextLine(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_ShowText(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetWordSpace(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetTextRise(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetTextRenderingMode(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetTextMatrix(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetTextLeading(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetRGBStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetRGBFill(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetMiterLimit(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetLineWidth(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetLineJoin(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetLineCap(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetHorizontalScalling(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetGrayStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetWidth(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetHeight(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetSize(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetRotate(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetWidth(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetHeight(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateDestination(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateTextAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateLinkAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_CreateURILinkAnnot(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_TextWidth(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_MeasureText(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetGMode(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetCurrentPos(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetCurrentTextPos(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetCurrentFont(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetCurrentFontSize(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetTransMatrix(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetLineWidth(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetLineCap(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetLineJoin(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetMiterLimit(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetDash(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetFlat(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetCharSpace(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetWordSpace(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetHorizontalScalling(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetTextLeading(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetTextRenderingMode(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetTextRise(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetRGBFill(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetRGBStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetCMYKFill(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetCMYKStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetGrayFill(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetGrayStroke(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetStrokingColorSpace(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetFillingColorSpace(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetTextMatrix(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_GetGStateDepth(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetSlideShow(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Page_SetZoom(sLONG_PTR *pResult, PackagePtr pParams);

// --- Font
void PDF_Font_GetFontName(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Font_GetEncodingName(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Font_GetUnicodeWidth(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Font_GetBBox(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Font_GetAscent(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Font_GetDescent(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Font_GetXHeight(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Font_GetCapHeight(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Font_TextWidth(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Font_MeasureText(sLONG_PTR *pResult, PackagePtr pParams);

// --- Image
void PDF_Image_GetSize(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Image_AddSMask(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Image_GetWidth(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Image_GetHeight(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Image_GetBitsPerComponent(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Image_GetColorSpace(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Image_SetColorMask(sLONG_PTR *pResult, PackagePtr pParams);
void PDF_Image_SetMaskImage(sLONG_PTR *pResult, PackagePtr pParams);
