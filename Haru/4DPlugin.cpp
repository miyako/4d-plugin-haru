/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : Haru
 #	author : miyako
 #	2017/06/24
 #
 # --------------------------------------------------------------------------------*/

#if VERSIONWIN
#include"4DPlugin.h"
#endif

#include "functions_hpdf.h"

void PluginMain(PA_long32 selector, PA_PluginParameters params)
{
	try
	{
		PA_long32 pProcNum = selector;
		sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
		PackagePtr pParams = (PackagePtr)params->fParameters;

		CommandDispatcher(pProcNum, pResult, pParams); 
	}
	catch(...)
	{

	}
}

void CommandDispatcher (PA_long32 pProcNum, sLONG_PTR *pResult, PackagePtr pParams)
{
	switch(pProcNum)
	{
// --- Extended Graphics State

		case 1 :
			PDF_ExtGState_SetAlphaFill(pResult, pParams);
			break;

		case 2 :
			PDF_ExtGState_SetAlphaStroke(pResult, pParams);
			break;

		case 3 :
			PDF_ExtGState_SetBlendMode(pResult, pParams);
			break;

// --- Document

		case 4 :
			PDF_UseCNTEncodings(pResult, pParams);
			break;

		case 5 :
			PDF_LoadU3DFromFile(pResult, pParams);
			break;

		case 6 :
			PDF_GetPageByIndex(pResult, pParams);
			break;

		case 7 :
			PDF_SetCurrentEncoder(pResult, pParams);
			break;

		case 8 :
			PDF_CreateExtGState(pResult, pParams);
			break;

		case 9 :
			PDF_LoadRaw1BitImageFromMem(pResult, pParams);
			break;

		case 10 :
			PDF_AddPageLabel(pResult, pParams);
			break;

		case 11 :
			PDF_LoadTTFontFromFile(pResult, pParams);
			break;

		case 12 :
			PDF_UseCNSEncodings(pResult, pParams);
			break;

		case 13 :
			PDF_GetTTFontDefFromFile(pResult, pParams);
			break;

		case 14 :
			PDF_LoadType1FontFromFile(pResult, pParams);
			break;

		case 15 :
			PDF_ResetError(pResult, pParams);
			break;

		case 16 :
			PDF_LoadRawImageFromFile(pResult, pParams);
			break;

		case 17 :
			PDF_LoadPngImageFromFile(pResult, pParams);
			break;

		case 18 :
			PDF_UseKREncodings(pResult, pParams);
			break;

		case 19 :
			PDF_CreateOutline(pResult, pParams);
			break;

		case 20 :
			PDF_InsertPage(pResult, pParams);
			break;

		case 21 :
			PDF_AddPage(pResult, pParams);
			break;

		case 22 :
			PDF_GetCurrentPage(pResult, pParams);
			break;

		case 23 :
			PDF_SetOpenAction(pResult, pParams);
			break;

		case 24 :
			PDF_GetPageMode(pResult, pParams);
			break;

		case 25 :
			PDF_SetPageMode(pResult, pParams);
			break;

		case 26 :
			PDF_GetPageLayout(pResult, pParams);
			break;

		case 27 :
			PDF_SetPageLayout(pResult, pParams);
			break;

		case 28 :
			PDF_SetPagesConfiguration(pResult, pParams);
			break;

		case 29 :
			PDF_SaveToFile(pResult, pParams);
			break;

		case 30 :
			PDF_HasDoc(pResult, pParams);
			break;

		case 31 :
			PDF_GetFont(pResult, pParams);
			break;

		case 32 :
			PDF_FreeDocAll(pResult, pParams);
			break;

		case 33 :
			PDF_FreeDoc(pResult, pParams);
			break;

		case 34 :
			PDF_NewDoc(pResult, pParams);
			break;

		case 35 :
			PDF_Free(pResult, pParams);
			break;

		case 36 :
			PDF_New(pResult, pParams);
			break;

		case 37 :
			PDF_GetEncoder(pResult, pParams);
			break;

		case 38 :
			PDF_GetCurrentEncoder(pResult, pParams);
			break;

		case 39 :
			PDF_LoadRawImageFromMem(pResult, pParams);
			break;

		case 40 :
			PDF_LoadPngImageFromMem(pResult, pParams);
			break;

		case 41 :
			PDF_LoadJpegImageFromMem(pResult, pParams);
			break;

		case 42 :
			PDF_LoadJpegImageFromFile(pResult, pParams);
			break;

		case 43 :
			PDF_SetInfoAttr(pResult, pParams);
			break;

		case 44 :
			PDF_GetInfoAttr(pResult, pParams);
			break;

		case 45 :
			PDF_SetInfoDateAttr(pResult, pParams);
			break;

		case 46 :
			PDF_SetPassword(pResult, pParams);
			break;

		case 47 :
			PDF_SetPermission(pResult, pParams);
			break;

		case 48 :
			PDF_SetEncryptionMode(pResult, pParams);
			break;

		case 49 :
			PDF_SetCompressionMode(pResult, pParams);
			break;

		case 50 :
			PDF_UseJPEncodings(pResult, pParams);
			break;

		case 51 :
			PDF_GetViewerPreference(pResult, pParams);
			break;

		case 52 :
			PDF_SetViewerPreference(pResult, pParams);
			break;

		case 53 :
			PDF_UseCNTFonts(pResult, pParams);
			break;

		case 54 :
			PDF_SaveToStream(pResult, pParams);
			break;

		case 55 :
			PDF_UseCNSFonts(pResult, pParams);
			break;

		case 56 :
			PDF_UseKRFonts(pResult, pParams);
			break;

		case 57 :
			PDF_UseJPFonts(pResult, pParams);
			break;

// --- Annotation

		case 58 :
			PDF_MarkupAnnot_SetPopup(pResult, pParams);
			break;

		case 59 :
			PDF_MarkupAnnot_SetIntent(pResult, pParams);
			break;

		case 60 :
			PDF_MarkupAnnot_SetAlpha(pResult, pParams);
			break;

		case 61 :
			PDF_MarkupAnnot_SetDate(pResult, pParams);
			break;

		case 62 :
			PDF_MarkupAnnot_SetSubject(pResult, pParams);
			break;

		case 63 :
			PDF_MarkupAnnot_SetTitle(pResult, pParams);
			break;

		case 64 :
			PDF_Annot_SetNoColor(pResult, pParams);
			break;

		case 65 :
			PDF_Annot_SetGrayColor(pResult, pParams);
			break;

		case 66 :
			PDF_Annot_SetCMYKColor(pResult, pParams);
			break;

		case 67 :
			PDF_Annot_SetRGBColor(pResult, pParams);
			break;

		case 68 :
			PDF_Annotation_SetBorderStyle(pResult, pParams);
			break;

		case 69 :
			PDF_TextAnnot_SetOpened(pResult, pParams);
			break;

		case 70 :
			PDF_TextAnnot_SetIcon(pResult, pParams);
			break;

		case 71 :
			PDF_LinkAnnot_SetBorderStyle(pResult, pParams);
			break;

		case 72 :
			PDF_LinkAnnot_SetHighlightMode(pResult, pParams);
			break;

		case 73 :
			PDF_MarkupAnnot_SetRectDiff(pResult, pParams);
			break;

		case 74 :
			PDF_MarkupAnnot_SetCloudEffect(pResult, pParams);
			break;

		case 75 :
			PDF_MarkupAnnot_SetRGBColor(pResult, pParams);
			break;

		case 76 :
			PDF_MarkupAnnot_SetCMYKColor(pResult, pParams);
			break;

		case 77 :
			PDF_MarkupAnnot_SetGrayColor(pResult, pParams);
			break;

		case 78 :
			PDF_MarkupAnnot_SetNoColor(pResult, pParams);
			break;

		case 79 :
			PDF_LineAnnot_SetLeader(pResult, pParams);
			break;

		case 80 :
			PDF_LineAnnot_SetCaption(pResult, pParams);
			break;

		case 81 :
			PDF_LineAnnot_SetPosition(pResult, pParams);
			break;

		case 82 :
			PDF_PopupAnnot_SetOpened(pResult, pParams);
			break;

		case 83 :
			PDF_MarkupAnnot_SetQuadPoints(pResult, pParams);
			break;

		case 84 :
			PDF_FreeAnnot_SetEndingStyle(pResult, pParams);
			break;

		case 85 :
			PDF_FreeAnnot_Set3PointCallout(pResult, pParams);
			break;

		case 86 :
			PDF_FreeAnnot_Set2PointCallout(pResult, pParams);
			break;

		case 87 :
			PDF_FreeAnnot_SetDefaultStyle(pResult, pParams);
			break;

// --- Outline

		case 88 :
			PDF_Outline_SetDestination(pResult, pParams);
			break;

		case 89 :
			PDF_Outline_SetOpened(pResult, pParams);
			break;

// --- Destination

		case 90 :
			PDF_Destination_SetFitBV(pResult, pParams);
			break;

		case 91 :
			PDF_Destination_SetFitBH(pResult, pParams);
			break;

		case 92 :
			PDF_Destination_SetFitB(pResult, pParams);
			break;

		case 93 :
			PDF_Destination_SetFitR(pResult, pParams);
			break;

		case 94 :
			PDF_Destination_SetFitV(pResult, pParams);
			break;

		case 95 :
			PDF_Destination_SetFitH(pResult, pParams);
			break;

		case 96 :
			PDF_Destination_SetFit(pResult, pParams);
			break;

		case 97 :
			PDF_Destination_SetXYZ(pResult, pParams);
			break;

// --- Global

		case 98 :
			PDF_Global_GetEncoding(pResult, pParams);
			break;

		case 99 :
			PDF_Global_SetEncoding(pResult, pParams);
			break;

// --- Page

		case 100 :
			PDF_Page_SetGrayFill(pResult, pParams);
			break;

		case 101 :
			PDF_Page_SetFontAndSize(pResult, pParams);
			break;

		case 102 :
			PDF_Page_SetExtGState(pResult, pParams);
			break;

		case 103 :
			PDF_Page_SetDash(pResult, pParams);
			break;

		case 104 :
			PDF_Page_SetCMYKStroke(pResult, pParams);
			break;

		case 105 :
			PDF_Page_SetCMYKFill(pResult, pParams);
			break;

		case 106 :
			PDF_Page_SetCharSpace(pResult, pParams);
			break;

		case 107 :
			PDF_Page_Rectangle(pResult, pParams);
			break;

		case 108 :
			PDF_Page_MoveToNextLine(pResult, pParams);
			break;

		case 109 :
			PDF_Page_MoveTo(pResult, pParams);
			break;

		case 110 :
			PDF_Page_MoveTextPos(pResult, pParams);
			break;

		case 111 :
			PDF_Page_LineTo(pResult, pParams);
			break;

		case 112 :
			PDF_Page_GSave(pResult, pParams);
			break;

		case 113 :
			PDF_Page_GRestore(pResult, pParams);
			break;

		case 114 :
			PDF_Page_FillStroke(pResult, pParams);
			break;

		case 115 :
			PDF_Page_Fill(pResult, pParams);
			break;

		case 116 :
			PDF_Page_EofillStroke(pResult, pParams);
			break;

		case 117 :
			PDF_Page_Eofill(pResult, pParams);
			break;

		case 118 :
			PDF_Page_Eoclip(pResult, pParams);
			break;

		case 119 :
			PDF_Page_EndText(pResult, pParams);
			break;

		case 120 :
			PDF_Page_EndPath(pResult, pParams);
			break;

		case 121 :
			PDF_Page_Ellipse(pResult, pParams);
			break;

		case 122 :
			PDF_Page_DrawImage(pResult, pParams);
			break;

		case 123 :
			PDF_Page_CurveTo3(pResult, pParams);
			break;

		case 124 :
			PDF_Page_CurveTo2(pResult, pParams);
			break;

		case 125 :
			PDF_Page_CurveTo(pResult, pParams);
			break;

		case 126 :
			PDF_Page_Concat(pResult, pParams);
			break;

		case 127 :
			PDF_Page_ClosePathFillStroke(pResult, pParams);
			break;

		case 128 :
			PDF_Page_ClosePathEofillStroke(pResult, pParams);
			break;

		case 129 :
			PDF_Page_ClosePathStroke(pResult, pParams);
			break;

		case 130 :
			PDF_Page_ClosePath(pResult, pParams);
			break;

		case 131 :
			PDF_Page_Clip(pResult, pParams);
			break;

		case 132 :
			PDF_Page_Circle(pResult, pParams);
			break;

		case 133 :
			PDF_Page_BeginText(pResult, pParams);
			break;

		case 134 :
			PDF_Page_Arc(pResult, pParams);
			break;

		case 135 :
			PDF_Page_CreateCircleAnnot(pResult, pParams);
			break;

		case 136 :
			PDF_Page_CreateSquareAnnot(pResult, pParams);
			break;

		case 137 :
			PDF_Page_CreateProjectionAnnot(pResult, pParams);
			break;

		case 138 :
			PDF_Page_CreateStampAnnot(pResult, pParams);
			break;

		case 139 :
			PDF_Page_CreatePopupAnnot(pResult, pParams);
			break;

		case 140 :
			PDF_Page_CreateFreeTextAnnot(pResult, pParams);
			break;

		case 141 :
			PDF_Page_CreateStrikeOutAnnot(pResult, pParams);
			break;

		case 142 :
			PDF_Page_CreateSquigglyAnnot(pResult, pParams);
			break;

		case 143 :
			PDF_Page_CreateUnderlineAnnot(pResult, pParams);
			break;

		case 144 :
			PDF_Page_CreateHighlightAnnot(pResult, pParams);
			break;

		case 145 :
			PDF_Page_CreateLineAnnot(pResult, pParams);
			break;

		case 146 :
			PDF_Page_CreateTextMarkupAnnot(pResult, pParams);
			break;

		case 147 :
			PDF_Page_TextRect(pResult, pParams);
			break;

		case 148 :
			PDF_Page_TextOut(pResult, pParams);
			break;

		case 149 :
			PDF_Page_Stroke(pResult, pParams);
			break;

		case 150 :
			PDF_Page_ShowTextNextLineEx(pResult, pParams);
			break;

		case 151 :
			PDF_Page_ShowTextNextLine(pResult, pParams);
			break;

		case 152 :
			PDF_Page_ShowText(pResult, pParams);
			break;

		case 153 :
			PDF_Page_SetWordSpace(pResult, pParams);
			break;

		case 154 :
			PDF_Page_SetTextRise(pResult, pParams);
			break;

		case 155 :
			PDF_Page_SetTextRenderingMode(pResult, pParams);
			break;

		case 156 :
			PDF_Page_SetTextMatrix(pResult, pParams);
			break;

		case 157 :
			PDF_Page_SetTextLeading(pResult, pParams);
			break;

		case 158 :
			PDF_Page_SetRGBStroke(pResult, pParams);
			break;

		case 159 :
			PDF_Page_SetRGBFill(pResult, pParams);
			break;

		case 160 :
			PDF_Page_SetMiterLimit(pResult, pParams);
			break;

		case 161 :
			PDF_Page_SetLineWidth(pResult, pParams);
			break;

		case 162 :
			PDF_Page_SetLineJoin(pResult, pParams);
			break;

		case 163 :
			PDF_Page_SetLineCap(pResult, pParams);
			break;

		case 164 :
			PDF_Page_SetHorizontalScalling(pResult, pParams);
			break;

		case 165 :
			PDF_Page_SetGrayStroke(pResult, pParams);
			break;

		case 166 :
			PDF_Page_SetWidth(pResult, pParams);
			break;

		case 167 :
			PDF_Page_SetHeight(pResult, pParams);
			break;

		case 168 :
			PDF_Page_SetSize(pResult, pParams);
			break;

		case 169 :
			PDF_Page_SetRotate(pResult, pParams);
			break;

		case 170 :
			PDF_Page_GetWidth(pResult, pParams);
			break;

		case 171 :
			PDF_Page_GetHeight(pResult, pParams);
			break;

		case 172 :
			PDF_Page_CreateDestination(pResult, pParams);
			break;

		case 173 :
			PDF_Page_CreateTextAnnot(pResult, pParams);
			break;

		case 174 :
			PDF_Page_CreateLinkAnnot(pResult, pParams);
			break;

		case 175 :
			PDF_Page_CreateURILinkAnnot(pResult, pParams);
			break;

		case 176 :
			PDF_Page_TextWidth(pResult, pParams);
			break;

		case 177 :
			PDF_Page_MeasureText(pResult, pParams);
			break;

		case 178 :
			PDF_Page_GetGMode(pResult, pParams);
			break;

		case 179 :
			PDF_Page_GetCurrentPos(pResult, pParams);
			break;

		case 180 :
			PDF_Page_GetCurrentTextPos(pResult, pParams);
			break;

		case 181 :
			PDF_Page_GetCurrentFont(pResult, pParams);
			break;

		case 182 :
			PDF_Page_GetCurrentFontSize(pResult, pParams);
			break;

		case 183 :
			PDF_Page_GetTransMatrix(pResult, pParams);
			break;

		case 184 :
			PDF_Page_GetLineWidth(pResult, pParams);
			break;

		case 185 :
			PDF_Page_GetLineCap(pResult, pParams);
			break;

		case 186 :
			PDF_Page_GetLineJoin(pResult, pParams);
			break;

		case 187 :
			PDF_Page_GetMiterLimit(pResult, pParams);
			break;

		case 188 :
			PDF_Page_GetDash(pResult, pParams);
			break;

		case 189 :
			PDF_Page_GetFlat(pResult, pParams);
			break;

		case 190 :
			PDF_Page_GetCharSpace(pResult, pParams);
			break;

		case 191 :
			PDF_Page_GetWordSpace(pResult, pParams);
			break;

		case 192 :
			PDF_Page_GetHorizontalScalling(pResult, pParams);
			break;

		case 193 :
			PDF_Page_GetTextLeading(pResult, pParams);
			break;

		case 194 :
			PDF_Page_GetTextRenderingMode(pResult, pParams);
			break;

		case 195 :
			PDF_Page_GetTextRise(pResult, pParams);
			break;

		case 196 :
			PDF_Page_GetRGBFill(pResult, pParams);
			break;

		case 197 :
			PDF_Page_GetRGBStroke(pResult, pParams);
			break;

		case 198 :
			PDF_Page_GetCMYKFill(pResult, pParams);
			break;

		case 199 :
			PDF_Page_GetCMYKStroke(pResult, pParams);
			break;

		case 200 :
			PDF_Page_GetGrayFill(pResult, pParams);
			break;

		case 201 :
			PDF_Page_GetGrayStroke(pResult, pParams);
			break;

		case 202 :
			PDF_Page_GetStrokingColorSpace(pResult, pParams);
			break;

		case 203 :
			PDF_Page_GetFillingColorSpace(pResult, pParams);
			break;

		case 204 :
			PDF_Page_GetTextMatrix(pResult, pParams);
			break;

		case 205 :
			PDF_Page_GetGStateDepth(pResult, pParams);
			break;

		case 206 :
			PDF_Page_SetSlideShow(pResult, pParams);
			break;

		case 207 :
			PDF_Page_SetZoom(pResult, pParams);
			break;

// --- Font

		case 208 :
			PDF_Font_GetFontName(pResult, pParams);
			break;

		case 209 :
			PDF_Font_GetEncodingName(pResult, pParams);
			break;

		case 210 :
			PDF_Font_GetUnicodeWidth(pResult, pParams);
			break;

		case 211 :
			PDF_Font_GetBBox(pResult, pParams);
			break;

		case 212 :
			PDF_Font_GetAscent(pResult, pParams);
			break;

		case 213 :
			PDF_Font_GetDescent(pResult, pParams);
			break;

		case 214 :
			PDF_Font_GetXHeight(pResult, pParams);
			break;

		case 215 :
			PDF_Font_GetCapHeight(pResult, pParams);
			break;

		case 216 :
			PDF_Font_TextWidth(pResult, pParams);
			break;

		case 217 :
			PDF_Font_MeasureText(pResult, pParams);
			break;

// --- Image

		case 218 :
			PDF_Image_GetSize(pResult, pParams);
			break;

		case 219 :
			PDF_Image_AddSMask(pResult, pParams);
			break;

		case 220 :
			PDF_Image_GetWidth(pResult, pParams);
			break;

		case 221 :
			PDF_Image_GetHeight(pResult, pParams);
			break;

		case 222 :
			PDF_Image_GetBitsPerComponent(pResult, pParams);
			break;

		case 223 :
			PDF_Image_GetColorSpace(pResult, pParams);
			break;

		case 224 :
			PDF_Image_SetColorMask(pResult, pParams);
			break;

		case 225 :
			PDF_Image_SetMaskImage(pResult, pParams);
			break;

	}
}

